{"version":3,"sources":["Components/Candidate.jsx","Components/ListCandidates.jsx","Components/Vote.jsx","Components/Intructions.jsx","App.js","serviceWorker.js","index.js","logo.svg","Img/waist.svg","Img/sleep.svg","Img/avocado.svg","Img/dove.svg","Img/pig.svg"],"names":["candidate","name","icon","votes","className","src","alt","value","displayType","thousandSeparator","renderText","listCandidates","candidates","map","Candidate","key","image","arrayToComponent","Vote","props","mapCandidatesToArrayName","names","state","cand","setState","handleOnPressVote","nameSelected","numberVotes","vote","showNotify","handleOnChangeVotes","event","target","maxVotes","handleOnChangeSelect","this","label","onChange","id","options","hidden","maxLength","min","max","placeholder","type","onClick","React","Component","Intructions","toggle","showModal","Button","color","Modal","isOpen","size","ModalHeader","ModalBody","href","ModalFooter","candidatesObj","imgVargas","imgFajardo","imgPetro","imgCalle","imgDuque","jokers","App","restart","console","log","alert","usedJokers","votesCollection","giveAward","giveName","totalVotes","theEnd","hideAlert","penalize","push","count","forEach","index","lastIndexOf","splice","calculateLimit","factor","remaining","calculateRemainingVotes","calculateTotalVotes","limit","Number","isPrimeNumber","i","del","indexOf","Math","floor","random","length","generateVotos","remainingVotes","votesToReturn","breakGive","ind","votesToSet","calculateVotes","indexCandidate","findIndex","indexJoker","notExist","k","totalVotos","checkIfWinner","greater","winner","message","auto","showAlert","whenVote","connectToShowNotify","maxAmountVote","candidateSelected","title","callBack","success","confirmBtnText","confirmBtnBsStyle","customIcon","onConfirm","dismiss","place","autoDismiss","refs","notificationAlert","ref","logo","ListCandidates","prefix","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.1e173f99.chunk.js","sourcesContent":["import React from \"react\";\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst candidate = ({ name, icon, votes }) => {\r\n  return (\r\n    <div className=\"col-md-2 col-sm-6\">\r\n      <h2>{name}</h2>\r\n      <img className=\"candidateImg\" src={icon} alt=\"icon\" />\r\n      <div className='votes-label' >\r\n        <span>Votos</span>\r\n        <NumberFormat value={votes} displayType={'text'} thousandSeparator={true} renderText={value => <span>{value}</span>} /> \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default candidate;\r\n","import React from \"react\";\r\nimport Candidate from \"./Candidate\";\r\n\r\nconst arrayToComponent = candidates =>\r\n  candidates.map(candidate => (\r\n    <Candidate key={candidate.name}\r\n      name={candidate.name}\r\n      icon={candidate.image}\r\n      votes={candidate.votes}\r\n    />\r\n  ));\r\n\r\nconst listCandidates = ({ candidates }) => {\r\n  return (\r\n    <div className=\"row col-12 col-sm-12 col-md-12 justify-content-center\">\r\n      {arrayToComponent(candidates)}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default listCandidates;\r\n","import React from \"react\";\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css'; \r\n\r\nclass Vote extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      candidates: this.props.candidates,\r\n      names: [],\r\n      nameSelected: '',\r\n      numberVotes: 0,\r\n      maxVotes: this.props.maxVotes\r\n    };\r\n  }\r\n\r\n  mapCandidatesToArrayName = () => {\r\n    const candidates = [...this.state.candidates];\r\n    const names = candidates.map(cand => (cand.name));\r\n    this.setState({ names });\r\n  }\r\n\r\n  handleOnPressVote = () => {\r\n    const name = this.state.nameSelected.value;\r\n    if (!name){\r\n      return;\r\n    }\r\n    const votes = this.state.numberVotes;\r\n    if (votes === 0){\r\n      debugger;\r\n      this.props.showNotify('bad', 'No puedes votar cero!', true);      \r\n      return;      \r\n    }\r\n    this.props.vote(name, votes);\r\n  }\r\n\r\n  handleOnChangeVotes = (event) => {\r\n    const numberVotes = event.target.value;\r\n    if (numberVotes >= 0 && numberVotes <= this.state.maxVotes){\r\n      this.setState({numberVotes});      \r\n    }else{\r\n      debugger;\r\n      this.props.showNotify('bad', 'El máximo de votos por tanda es de 100 mil!', true);\r\n    }\r\n  }\r\n\r\n  handleOnChangeSelect = (nameSelected) => {\r\n    this.setState({nameSelected: nameSelected});    \r\n  }\r\n\r\n  componentWillMount() {\r\n    this.mapCandidatesToArrayName();\r\n  }\r\n\r\n  render() {\r\n    const { nameSelected } = this.state;    \r\n    const names = this.state.names.map(name => (\r\n        { value: name, label: name }\r\n      )\r\n    );\r\n    return (\r\n        <div className='vote-controls col-12 justify-content-center' >\r\n          <div>\r\n            <label>Selecciona tu Candidato</label>\r\n            <div>\r\n              <Select className='select-style'\r\n                value={nameSelected} \r\n                onChange={this.handleOnChangeSelect} \r\n                name=\"candidateNames\" id=\"candidateNames\" \r\n                options={names}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div hidden={!this.state.nameSelected}>\r\n            <div>\r\n              <label>Empieza a Votar</label>\r\n            </div>\r\n            <div>\r\n              <input className='input-style' maxLength=\"6\" min=\"1\" max={this.state.maxVotes} value={this.state.numberVotes} onChange={this.handleOnChangeVotes} placeholder=\"Votos reales\" type=\"number\" />\r\n              <button className=\"btn-vote\" onClick={this.handleOnPressVote} >\r\n                Votar\r\n              </button>\r\n            </div>                      \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Vote;\r\n","import React from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nclass Intructions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showModal: this.props.showModal\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({showModal: !this.state.showModal})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button className=\"btn-instructions\" color=\"warning\" onClick={this.toggle}>Instrucciones</Button>        \r\n        <Modal\r\n          isOpen={this.state.showModal}\r\n          toggle={this.toggle}\r\n          className={this.props.className}\r\n          size=\"lg\"\r\n        >\r\n          <ModalHeader toggle={this.toggle}> <h4>Intrucciones</h4></ModalHeader>\r\n          <ModalBody>\r\n          <h5>Bienvenido a <b>\"La Votadera\"</b> de tiempo!!</h5>\r\n            <p>\r\n              A continuación encontrarás las instrucciones, aunque si quieres puedes probar suerte sin leer nada.\r\n            </p> \r\n            <p>\r\n              La idea es hacer que tu candidato gane, ante ese deseo se va a interponer la <b>Fotocopiaduría Nacional</b> del Estado Civil de Colombia \r\n              haciendo trampas para evitar que tu candidato salga con la mayor cantidad de votos. \r\n            </p>\r\n            <p>\r\n              Primero debes seleccionar tu candidato, luego en el campo para votos debes poner una cifra desde 1 hasta 100.000 y posteriormente \r\n              presionar el botón votar. (Puedes cambiarla cuantas veces quieras)\r\n            </p>\r\n            <p>\r\n              En cada votación tuya <b>la Fotocopiaduría</b> le podrá asignar a los demás candidatos desde uno hasta el doble de votos de los que le asignaste a tu candidato.\r\n            </p>\r\n            <p>\r\n              La aplicación cuenta con <b>6 comodines de un solo uso</b>, y estos son unos números especiales, tres de ellos son de 5 dígitos y están relacionados directamente con las \r\n              elecciones de la primera vuelta. Los otros tres son de 4 dígitos y representan fechas especiales para <b>La Democracia de Colombia</b>.\r\n              Los comodines funcionan mejor al principio pues te pueden ayudar a tomar la delantera y una vez se use un comodín ya no funcionará de nuevo.\r\n            </p>\r\n            <p>\r\n              La aplicación también cuenta con una función que premia tu suerte (si la tienes) pero debes poner mucha atención a los cambios en \r\n              cada votación porque habrá una señal en los números que te indicará que es el momento para aprovechar esa ventaja, pero si no la aprovechas, \r\n              deberás esperar hasta otra oportunidad.\r\n            </p>\r\n            <p>\r\n              Pd: los <b>números primos</b> pueden ser tu mejor amigo en ciertos momentos, pero ese momento es el que tú debes descubrir.\r\n            </p>\r\n            <p>Cuando termines monta tu Print Screen en redes con el Hashtag <b>#LaVotadera</b> Suerte con tu candidato!! :)  </p>\r\n            <p>\r\n              Esta vaina se ve mejor con la fuente oficial y <a href=\"http://2ttf.com/download/DVb26GzXk0k\" > la descargas desde aquí!!</a> vía 2ttf\r\n            </p>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggle}>\r\n              De acuerdo\r\n            </Button>{\" \"}            \r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Intructions;\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport NotificationAlert from 'react-notification-alert';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport ListCandidates from './Components/ListCandidates';\r\nimport Vote from './Components/Vote';\r\nimport Intructions from './Components/Intructions';\r\n\r\nimport imgVargas from './Img/waist.svg';\r\nimport imgFajardo from './Img/sleep.svg';\r\nimport imgPetro from './Img/avocado.svg';\r\nimport imgCalle from './Img/dove.svg';\r\nimport imgDuque from './Img/pig.svg';\r\n\r\nconst candidatesObj = [\r\n    { name: 'Vargas', image: imgVargas, votes: 0 },\r\n    { name: 'Fajardo', image: imgFajardo, votes: 0 },\r\n    {name: 'Petro', image: imgPetro, votes: 0 },\r\n    { name: 'La Calle', image: imgCalle, votes: 0 },\r\n    { name: 'Duque', image: imgDuque, votes: 0 }\r\n];\r\n\r\n//const jokers = [585970, 851254, 569693, 1810, 1856, 1984];\r\nconst jokers = [85970, 51254, 69693, 1810, 1991, 2018];\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      candidates: [...candidatesObj],\r\n      jokers: jokers,\r\n      usedJokers: [],\r\n      giveAward: false, \r\n      giveName: '',  \r\n      maxVotes: 20000000, \r\n      maxAmountVote: 100000,\r\n      votesCollection: [],\r\n      totalVotes: 0,\r\n      alert: '',\r\n      theEnd: false, \r\n      showModal: true, \r\n      candidateSelected: false\r\n    }\r\n  }\r\n\r\n  restart = () => {\r\n    console.log('Restarting...');\r\n    this.setState({      \r\n      alert: '', \r\n      candidates: candidatesObj, \r\n      usedJokers: [], \r\n      votesCollection: [],\r\n      giveAward: false, \r\n      giveName: '', \r\n      totalVotes: 0, \r\n      jokers: jokers,       \r\n      theEnd: false\r\n    })\r\n    console.log('Restarted...');   \r\n  }\r\n\r\n  hideAlert = () => {\r\n    this.setState({\r\n        alert: ''\r\n    });\r\n  }\r\n\r\n  showAlert(title, message, callBack, icon) {\r\n    this.setState({\r\n        alert: (\r\n            <SweetAlert \r\n                success\r\n                confirmBtnText = \"De acuerdo\"\r\n                confirmBtnBsStyle = \"primary\"\r\n                customIcon = {icon ? icon : \"thumbs-up.jpg\"}\r\n                title = {title}\r\n                onConfirm = {this.hideAlert}\r\n            >\r\n                {message}\r\n            </SweetAlert>\r\n        )            \r\n    });\r\n  }\r\n\r\n  showNotify({type, message, auto}) {\r\n    type = type ? type : 'warning';\r\n    let dismiss = 7;\r\n    switch (type) {\r\n        case 'ok':\r\n            type = 'success';\r\n            break;\r\n        case 'bad':\r\n            type = 'danger';\r\n            if (!auto){\r\n                dismiss = 0;\r\n            }\r\n            break;  \r\n        default: \r\n            type  = 'warning';\r\n    }\r\n    const options = {\r\n        place: \"tc\", \r\n        message: message, \r\n        type: type, \r\n        icon: \"now-ui-icons ui-1_bell-53\",\r\n        autoDismiss: dismiss\r\n    };\r\n    this.refs.notificationAlert.notificationAlert(options);\r\n  }\r\n\r\n  penalize = (votes) => {\r\n    debugger;\r\n    const votesCollection = [...this.state.votesCollection];\r\n    votesCollection.push(votes);\r\n    let count = 0;\r\n    votesCollection.forEach(vote => {      \r\n      if (vote === votes){\r\n        count = count + 1;\r\n      }\r\n    });\r\n    if (count === 2){\r\n      let index = votesCollection.lastIndexOf(votes);\r\n      if (index >= 0){\r\n        votesCollection.splice(index, 1);\r\n      }\r\n      index = votesCollection.lastIndexOf(votes);\r\n      if (index >= 0){      \r\n        votesCollection.splice(index, 1);\r\n      }\r\n      return true;\r\n    }\r\n    this.setState({votesCollection});\r\n    return false;\r\n  }\r\n\r\n  calculateLimit = (candidates, votes, factor) => {\r\n    const remaining = this.calculateRemainingVotes(this.calculateTotalVotes(candidates));\r\n    const limit = remaining > votes * 2 ? Number(votes) * Number(factor): (votes > remaining) ? remaining : remaining - votes;\r\n    return Number(limit);\r\n  }\r\n\r\n  isPrimeNumber = (votes) => {\r\n    for (let i=2; i < votes / 2; i++) {\r\n      if (votes % i === 0) {\r\n        return false;\r\n      }  \r\n    }\r\n    return true;\r\n  }\r\n  \r\n  giveAward = (candidates, name) => {\r\n    debugger;\r\n    const names = candidates.map(cand => (cand.name));\r\n    const del = names.indexOf(name);\r\n    names.splice(del, 1);\r\n    const index = Math.floor(Math.random() * names.length) + 1;\r\n    const nameInd =  Math.floor(Math.random() * names.length) + 1;\r\n    if (nameInd === index){\r\n      this.setState({giveAward: true, giveName: names[index - 1]});\r\n      return names[index - 1];\r\n    }\r\n  }\r\n\r\n  generateVotos= (name, votes, remainingVotes, candidates) => {\r\n    debugger;\r\n    let votesToReturn = Number(votes);\r\n    const factor = this.penalize(votes) ? 3 : 2;\r\n    let limit = this.calculateLimit(candidates, votes, Number(factor));\r\n    let breakGive = true;\r\n    let giveName = '';\r\n    if (!this.state.giveAward){\r\n      giveName = this.giveAward(candidates, name);\r\n      breakGive = false;\r\n    }\r\n\r\n    if (!this.state.giveAward || (this.state.giveAward && !this.isPrimeNumber(votes))){  \r\n      for (let ind=0; ind < candidates.length; ind++){\r\n        if (candidates[ind].name !== name && candidates[ind].name !== giveName){\r\n          const votesToSet = Math.floor(Math.random() * limit) + 1;\r\n          if (Number(limit) > 0){\r\n            candidates[ind].votes += votesToSet;\r\n            limit = this.calculateLimit(candidates, votes, Number(factor));       \r\n          }\r\n        }      \r\n      }\r\n    }else{   \r\n        votesToReturn = Math.floor(Math.random() * limit) + 0;\r\n        if (votesToReturn < votes && votes * 2 < limit){\r\n          votesToReturn = votes * 2;\r\n        }\r\n        for (let ind=0; ind < candidates.length; ind++){\r\n          if(candidates[ind].name === this.state.giveName){\r\n            candidates[ind].votes += Math.floor(Math.random() * votesToReturn) + 0;\r\n          }\r\n        }\r\n    }\r\n\r\n    if (breakGive && this.state.giveAward){\r\n      this.setState({giveAward: false, giveName: ''});\r\n    }\r\n    remainingVotes = this.calculateRemainingVotes(this.calculateTotalVotes(candidates));\r\n    if (votesToReturn > remainingVotes){\r\n      votesToReturn = (remainingVotes > 5) ? remainingVotes - 5 : (remainingVotes > 3) ? remainingVotes - 3 : remainingVotes > 1 ? remainingVotes - 1 : remainingVotes;\r\n    }\r\n    return votesToReturn;\r\n  }\r\n\r\n  calculateVotes = (name, votes, totalVotes, candidates) => {\r\n    const jokers = [...this.state.jokers];    \r\n    const usedJokers = [...this.state.usedJokers];\r\n    const remainingVotes = this.calculateRemainingVotes(totalVotes);\r\n    let votesToSet = Number(votes);\r\n    const indexCandidate = candidates.findIndex(cand => cand.name === name);  \r\n    const indexJoker = jokers.indexOf(votesToSet);\r\n    const notExist = usedJokers.indexOf(votesToSet);\r\n\r\n    if (indexJoker >= 0 && notExist < 0 && votesToSet !== 1){\r\n      debugger;\r\n      usedJokers.push(votesToSet);\r\n      this.setState({usedJokers});\r\n      if (votesToSet === 69693 && remainingVotes > 8000000){\r\n        votesToSet = 7000000 + votesToSet;\r\n      }else if (indexJoker >= 3 && remainingVotes > 200000){\r\n        votesToSet = votesToSet * 100;          \r\n      }else if (remainingVotes > 5000000){\r\n        //votesToSet = 4000000 + votesToSet; \r\n        votesToSet = (votesToSet === 51254) ? 4800000 + votesToSet : 4500000 + votesToSet;   \r\n      }\r\n    }else if (votesToSet !== 1){\r\n      votesToSet = this.generateVotos(name, votesToSet, remainingVotes, candidates);\r\n    }\r\n    //Se resta 3 para el remate final\r\n    if (votesToSet + totalVotes > this.state.maxVotes){\r\n      votesToSet = this.setState.maxVotes - totalVotes - 3;\r\n    }\r\n    candidates[indexCandidate].votes += votesToSet;\r\n    this.setState({candidates});\r\n  }\r\n\r\n  calculateTotalVotes = (candidates) => {\r\n    let totalVotes = 0;\r\n    for (let k = 0; k < candidates.length; k++){\r\n      totalVotes += candidates[k].votes;\r\n    }\r\n    this.setState({totalVotes: totalVotes});\r\n    return totalVotes;\r\n  }\r\n\r\n  calculateRemainingVotes = (totalVotos) => {\r\n    return this.state.maxVotes - totalVotos;\r\n  }\r\n\r\n  checkIfWinner = (name, candidates) => {    \r\n    const totalVotes = this.calculateTotalVotes(candidates);\r\n    if (Number(totalVotes) === Number(this.state.maxVotes)){\r\n      let greater = 0;\r\n      let winner = '';\r\n      for (let ind = 0; ind < candidates.length; ind++){\r\n        if (Number(candidates[ind].votes) > greater){\r\n          greater = Number(candidates[ind].votes);\r\n          winner = candidates[ind];\r\n        }\r\n      }\r\n      this.setState({theEnd: true});\r\n      if (winner.name === name){\r\n        this.showNotify({type: 'ok', message: 'Ganaste!', auto: true});\r\n        this.showAlert(`Hemos terminado, y el ganador fue tu candidato`, '¿Deseas reiniciar? Presiona F5', () => this.restart(), winner.icon);\r\n      }else{\r\n        this.showNotify({type: 'bad', message: 'Perdiste!', auto: true});        \r\n        this.showAlert(`Hemos terminado, y el ganador fue ${winner.name}`, '¿Deseas reiniciar? Presiona F5', () => this.restart(), winner.icon);\r\n      }\r\n    }\r\n  }\r\n \r\n  whenVote = (name, votes) => {\r\n    debugger;\r\n    const candidates = [...this.state.candidates]; \r\n    if (this.state.theEnd){\r\n      this.checkIfWinner(name, candidates);\r\n      return;\r\n    }     \r\n    let totalVotes = this.calculateTotalVotes(candidates);\r\n    if (totalVotes + Number(votes) > this.setState.maxVotes){\r\n      this.showNotify({type: 'bad', message: '¡La cantidad máxima de votos es de 20 millones!', auto: true});\r\n      return;\r\n    }\r\n    this.calculateVotes(name, votes, totalVotes, candidates);\r\n    this.checkIfWinner(name, candidates);\r\n  }\r\n  \r\n  connectToShowNotify = (type, message , auto) => {\r\n    this.showNotify({type: type, message: message, auto: auto});\r\n  } \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n            <Intructions />\r\n        <NotificationAlert ref=\"notificationAlert\"/>\r\n        {this.state.alert}\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <h1 className=\"App-title\">Elecciones la Lechona</h1>\r\n        </header>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row \" >\r\n            <ListCandidates candidates={this.state.candidates} />\r\n          </div>\r\n          <div className=\"row \" >\r\n            <Vote candidates={this.state.candidates} vote={this.whenVote} maxVotes={this.state.maxAmountVote} showNotify={this.connectToShowNotify} />\r\n          </div>          \r\n          <div hidden={this.state.totalVotes === 0} className=\"color-total row justify-content-center\" >\r\n            <NumberFormat value={this.state.totalVotes} displayType={'text'} prefix={'  '} thousandSeparator={true} renderText={value => <h3>Total Votos:{value}</h3>} />             \r\n          </div>\r\n        </div>                 \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/logo.550d0ba7.svg\";","module.exports = __webpack_public_path__ + \"static/media/waist.f6e1de92.svg\";","module.exports = __webpack_public_path__ + \"static/media/sleep.0420ab78.svg\";","module.exports = __webpack_public_path__ + \"static/media/avocado.499ca423.svg\";","module.exports = __webpack_public_path__ + \"static/media/dove.dbbacab3.svg\";","module.exports = __webpack_public_path__ + \"static/media/pig.50482e3e.svg\";"],"sourceRoot":""}